Speaker 2: you're listening to the on call nightmares podcast, and every week I bring your conversations with technologists who spent time on call. This week. I speak toe Nick Malucci from Encore Technologies, and one of the things that I really wanted to get done with this podcast was to talk to people who've been in really different situations. I know with a pool of we got an opportunity to talk about someone who was dealing with being and, uh, you know, a family situation and being extremely on call. This time we talk Thio Nick Moloney, who spent some time, is a D o D contractor at a place called Silver Block Systems. And what's really great about the conversation we have is that Nick, I got to see some really weird on print. And when I say weird on Prem, I mean sticking a data center inside the back of a 7 37 and having to create networking monitoring and actually build the protocols that will send information back and forth to the systems. This is pretty nuts to me, and I have to be honest. I had no clue that this was the kind of conversation I was gonna happen. Nick introduced it to me. So I really am very thankful. I got some time with Nick and speaking up time. I'm gonna be running short on time. Next week, I'm gonna be in Sweden may not have an episode if perchance you're listening sometime, either on Thursday or Friday. And you really would like to be on next week's podcast. You know, I may have some time for you over the weekend. I'm flying to the ignite tour for Microsoft. We're doing an event in stock home. It's free. If you are in the Stockholm area, check out the website. You can just Google for a night tour stock home. I'll be doing a talk on performing migrations, and I'm really looking forward to it because I've never been to Sweden and I'm a big death metal fan, So I, uh I'm gonna go looking for maybe some I don't know Cem Different band T shirts, maybe See if I go see some music while I'm there. I'm a big after Gates fan, so I would love it if somehow or another I I find a good at the gate shirt while in there. Anyhow, anyhow, What the heck was that anyway? I'm not gonna edit that out because it was weird. And today's theme is kind of weird on Prem. So we're gonna get into you the interview in just a second. I just got back from Dev upstate Houston, and I just wanted to send a shout out to everyone who was part of that particular event. I thought was really great. I got an opportunity to talk. I did some conversations and open spaces of people. The Dev Ops Days community just is incredible. I very, very proud to be part of it. So if you have a local Dev ops days, I recommend you go check those out. Anyhow, if you'd like to be on the podcast, the best way for you to get in touch with me is to send me an email. It is on call nightmares at gmail dot com Once again on call nightmares at gmail dot com. You can also find me on Twitter at on called Night Mayor or at J de Stro. So let's get into our interview with Nick. Welcome back to the on call nightmares podcasts, and every week I bring you a conversation with a technologist who spent some time on call in this week. I am proud to introduce to you nick quality from on Core technologies. Nick's been a a manager of Dev Ops team and the director. Recently, he was promoted to the director of engineering an encore technologies. He's helping people bring software engineering rigor to the automation and operation teams, I believe, is what you're trying to do.

Speaker 1: Yeah, yeah, it's pretty right? Ah, I drew up in and did my traditional training as a software engineer and computer science. And ah, I got hired on at this job because I've done a lot of, ah practical work in the computer science field and realize that the industry is kind of going towards this Dev Ops model and suffer Engineering is kind of court of that insured by my boss brought me in tow, help take my experience, is there and and apply it. So what we're doing and man of service is

Speaker 2: but a big portion of what we're going to kind of have a chat about today Make is is your time that you did some work with the Department of Defense contractor. So you're working in the civilian sector now, but prior you were working mostly in defense and military. Is that right?

Speaker 1: Yeah. So, uh, see, it's probably eight years ago now. I just graduated school and was lucky enough to get hooked up with a startup coming right out of school. We did duty contracting for the Navy. And then, really, we were building this integration platform for an aircraft. We had all these different sensors that the Navy wanted Thio test out, and we're rapidly testing new sensors, determining if they worked trying to figure out how to operationalize all of these things. And really what we ended up building was this, like, full stack immigration platform to quickly talk to these sensors to get the data displayed to the user, make decisions about it integrated with another sensors output, that sort of thing.

Speaker 2: Sure. So let's sze way, way back up a little bit since we've got kind of an idea of what you've done. And and and some of the place you've done it. You got started at a school a T university Toledo, where you did Ah, bunch in computer science and engineering. Um, it looks like you worked in electronic medical records. And, um so you already had some previous six experience managing production systems after school before going into, uh, doing defense work. Correct?

Speaker 1: Yeah. So, drink school. I worked for four semesters at a company called a BB. We did the industrial automation think of, like, control systems for big plastics factories or pharmaceutical factories or oil and gas, that type of scotch. And so we had, like, large distributed systems with a lot of concurrency and, uh, messaging and high throughput in that sort of stuff. And so I kind of got my taste, their appetite for high performance computing there. Um, and it's funny drinks school. I thought I wanted to go into security because I like the math and stuff behind cryptography. And and then, after doing the kind of high performance computing side of it and taking some operating systems classes and kind of getting into, the more the practical side, I realized that's why I want to focus my time. And, um, I just happened to get hooked up with a friend, a friend of a friend from a BB, And that's where I started going into the d O D contracting space. And really, a lot of what we focused on was similar sort of things. But just like a much crazier scale, right? We were Ah, we're doing things for Riel and Ah, and taking that there's concurrency and distributed systems models. Too much, much higher level.

Speaker 2: Gotcha. So when would you say you first took your steps in on call in your career? Um, so I did a little

Speaker 1: bit of work into the electronic medical records company, but it was mostly we were on call. We only had about 10 doctors offices that were customers of ours. And so, um, but we get called in and mostly is like customer interfacing, so I'd d'oh and ah, help debunk of problem with customer site or something like that. Um, that's that's kind of my start into it. But it was never off hours. It was always your 9 to 5 kind of help. And then really, it was when I started working for the d. O. D. And an on call is kind of an interesting, uh, thing there. You know, during the kind of winter months, we would be our undying and developing these new technologies And then in the spring time, we'd go down and be doing test flights, and I'd be flying on the aircraft's actively debugging fixing problems on the during the flights while we're running the sensors, developing new features, if needed. And then we also take that those lessons. We learned that technology and then go on, deploy it into the field and actually run real missions with it and again on the aircraft. So

Speaker 2: I'm guessing we're not talking about a monitoring step that includes, like Maggio's and pager duty. We're probably talking about Cem far more intricate systems state to alert you with correct? Yeah,

Speaker 1: and it And it wasn't even. So looking at what I do now and understanding how things like Maggio's or Prometheus all that work, we didn't really have any of that. Ah, a lot of it was homegrown. So you can think of what we had is just like a data center on a plane. And so it was a small number of systems. Um, you know, I think we had at the time our stack ran out like about 20 nodes and and I knew exactly what was running out. Every one of those nodes and they never would really move. You know, there's no

Speaker 2: told Lennox based O. R. Tell

Speaker 1: Lennox based. There's Ah, six sent us the time we were running. And,

Speaker 2: uh, least we know that there's some open source on our giant flying planes.

Speaker 1: Yeah, actually, a lot of stuff we did was open source. Uh, I'd say most of it with things we wrote. Couldn't be open source. Unfortunately, Yeah, we did a lot of open source. We worked things like UT and post grass and all that fun stuff. So

Speaker 2: awesome. So a CZ You know, by the time we get through the intro on the podcast, since you've mentioned to me prior we listening our recording you mentioned you've listened before we get to the rules. And, uh, I hope you're prepared for the rules. I know they're pretty tough. Its rules are. Don't incriminate yourself because I don't want you to get in any trouble, Especially the fact that you work in the d. O d sector. Um, do not incriminate others because every retrospective really should be blameless, and more than anything, help us learn. So with that, I'm going to allow you to give me an interesting story that you might have had from on call. Why don't you share with us? All right.

Speaker 1: Um so I think the 1st 1 I wanted to start with and we can get into couple dependent on on how long we want to take this. But, ah, um, the 1st 1 we were working on So are our stack that we wrote was kind of was really full stack. Right? So we wrote things from network protocol interaction with sensors, so I'd be writing Ah, custom TCP protocol handlers and communication in our faces stocked a brand new sensor taking that and transforming that in the messages and saving it to a database. The database

Speaker 2: protocols. You're not just moving things like using existing protocols. You're actually having to build protocols yourself, right?

Speaker 1: Exactly. It wasn't like, uh, we had, like, J r p C or something or hdp rest ap eyes. It was all custom. You know, bit number one isn't enable flag and bit number two is the version flag and stuff.

Speaker 2: You know, before you get too far into that is this do thio Just the methodologies that they require. So I guess interact with the systems that are already far off the plane. So, uh, not really.

Speaker 1: It was mostly, you know, we would take some vendors, technology and these, like D o D vendors or, ah, another contractors technology that have, like, custom built their own little special snowflake right in the corner. And they say, Hey, we have this cool capability and we say, Oh, we need that capability and we'll try to integrate it in. And so every one of those different vendors had some unique protocol to communicate with it, and we had to quickly Ah, are the reason I called integration platforms. We have to quickly integrate these new systems and, ah, grab the data off of them and able to communicate back to send them commands to do. We wanted them

Speaker 2: to D'oh! You know, it's funny, and I know it's strange and we'll let you get back into your story in a second. But I think about how automobiles now have become platforms for technology. When you look at them, it kind of almost reminds me the same thing. There are all these ways that you could integrate other technologies into automobiles and like I was in a Toyota recently, and I saw Apple car, and I just thought about how more and more we're integrating service is that we were traditionally putting on Web servers and stuff like that. Now they're in cars, planes you needed.

Speaker 1: Yeah. Yeah, And it it's funny, too. I see a lot of parallels between the work that I was doing for the d o d. And the stuff that I'm doing. Kind of the dev ops, you know, systems Operation space does that Integration disintegration points are always the trickiest and the hardest and the most painful. Um, and I think as an industry, we need to do a better job of making those pieces talk to each other better and defining better standards and and building technologies around this interfaces.

Speaker 2: Sure. So let's get into a incidents or nightmare, if you will.

Speaker 1: Yeah. So, uh so So we got a kind of full stack of what we're working on. Um, and the give you a kind of a visualization of how that the plane was laid out. We had a couple server racks in the back that held all of our gear that did our data processing and gathering and then imagine on like a 7 37 all the seats taken out and on 1/2 of the plane facing all the windows were these workstations and the work station was a big metal honkin desk, and inside the desk was a monitor that was embedded into it. And then there was a tray in front of you with the keyboard and mouse and then your chair that could sit there, and so on the left side of our plane would be four or five workstations all put up right against the wall and network cables going off the ceiling and everything. And so we'd fly around and we'd be like working at these workstations and, ah, gathering sensor data and some of the data that we gather wood. We'd process it and render images on the screen. And so the images would then tell us, you know, is there Do we see something out in the environment that is interesting or not interesting or something we need to go investigate. And so we're flying around one night in the middle of the night on a mission, and we've got everybody kind of work in. We're in the groove have popped a couple red bulls. At this point, it's probably like two or three in the morning. And Ah, and I'm sitting in the back work station, which is on the opposite wing, kind of separate from everybody else. So I could focus on my tasks which were debugging and troubleshooting and implementing new features at all of sudden I hear over the radio. So what? We all have headsets on these big, nice Bose sound cancelling headsets. Now hear the radio. Oh, crap. My, uh, my workstation froze. I can't do anything. And then I heard another report I mine's frozen to Can't see anything at all. I can't do with my work. And so I run up. Think my headset off Run up there. I told them Hey, show me. Show me what's going on. They showed me and everything was just cruising. But

Speaker 2: here is the live on call if you will. Yeah, mayor happening. And the difference is is you're not getting the phone call like and while you're in bed, you're on a friggin plane,

Speaker 1: right? I'm on a plane where, you know, 10,000 feet. It's the middle of the night and stuffs broken. And we're trying to execute a mission, and I am the only one on the plane that's able to fix it. Right. Um so So there's a lot of pressure, right? This is, like super high pressure scenario. Um and so I I get back there and our applications written in AA C plus plus. And so I took one of displays. I booted it up. I attached GDP to it and try to find out where it was was hanging. And so I come in and I I block on the call, and I see Oh, it's when it was pulling these images that it wasn't getting a response in time. And and so the display was hanging up right for our well, you, uh so, like I say, we're a full stack kind of engineering. These displays written in c++. And we used open G l and like, three D graphics rendering to render all this data kind of over laid on the screen on DSO. The rendering loop was breaking on this RPC call to go and get the images from our our data processing service and another another node. And so I'm like that crap. So something maybe the service is dead. And so I go over to that. The box. It's doing the data processing debugging it. I see it's working, but it's just going totally batshit crazy. Um, and I get on and start using my debugging tools, checking system stats, all this sort of stuff. See that the CPU super high. But it's actually processing data. And so I'm going to think to myself, Why is this thing it looks like the things doing work. I see the request coming in and going out. Why're the these displays freezing? And so I'm going down my kind of checklist, right? The data's flowing, um, the machines actually working. I'm not at a disco, anything like that. And ah, it kind of dawned on me at one point. I said, Hey, you know, maybe the network is just getting slammed for some reason, right? We have all these we've at this point. We have, like six or seven displays open, and they're all rendering these gigantic images at different zoom levels and stuff like that. Maybe that is what's causing it. And so, of course, I open up like I have top and ah, I see On the tick marks of these images, we had generated every several seconds kind of on a big burst. And all the displays, when that tick would happen would request new images for this updated data set. And when that happened, the next time I saw this huge spike in network traffic and kind as I thought the network interface leaving the device was 100% saturated, and the packets are just getting dropped on

Speaker 2: the floor. So is this satellite Internet service that you're Oh, so this is this

Speaker 1: was, uh this was data going across the the land. Just open the plane itself.

Speaker 2: The internal network that you have. So Okay, so you're having to build racks within this This machine, you're having to order this airplane. You're having to ensure that there's network connectivity between the racks here, then having also troubleshoot the actual application in the racks. Yeah, it was like a lot of work.

Speaker 1: Yeah, and actually, so it's funny. Uh, we built our own servers out of super micro pizza boxes from, like, you know that we're doing this, I think 2000 8009 so kind of before the Super Micro hype got big and ah, um and yeah, I was my own network guy. I was my own I t guy. We luckily had a team that helped us install stuff, and, ah, if he installed guys were out there, can Matt? Dave, You guys were rock stars, man, that I love you guys. Miss you guys, there's Ah, yeah, good, sir.

Speaker 2: No problem. So you really have to kind of, I suppose be what you would call a poly God if you will, because you're not only having to deal with just technology that we're used to in the world off tech now related to systems and servers and applications. But you also happen to deal with the the idea of putting it on a plane. Were there anything that you can recall about? Like electricity, power like limitations that you ran into, and any of that ever come up in an incident where you had to figure out how to keep things going?

Speaker 1: Yeah, um, there's a couple different pieces there, and, uh, I'll impact that a little bit. So on the power side, the engines generate power in D. C. And Ah, but all the servers consume it in a C. And so we had a point in time. Ah, couple of years in where we're putting more and more gear on the plane and there was not enough a sea power being generated from the converters are built on the plane that we had to install our own converters to convert D. C to a. C and the bottom, these racks and ah, so that was part of it. We had Thio distribute our gear within the racks in evenly weighted, so we couldn't just put in like, you know, our sander are Nass in the same physical rack as our data gear because it was too heavy, right? So we had to distribute our stuff that way, and even heat was another concern. So we'd have cooling in certain areas and not other areas. And so certain boxes, because of the gear inside of them ran hotter. So we had to move that stuff around, and actually so ah, good environmental story that we had, um, sometimes. So we're we're deployed, Um, and we're flying around on a mission, and part of the mission parameters would be to go and find something, and then we found it. We would need close up images and data from this target that we're going after. And so will be flying around high altitude trying to look for something. And we find it. We go down to little attitude like 500 feet and go get real close up images of the thing. And, uh so we had found a target and we were going and descending, Went down to 500 feet, were flying around, and, ah, probably about 15 or 20 minutes in the system Just started acting funny. You know, things started to not appear where they should have things would become slow. And all a sudden, everybody's display just went out, right? No data was being passed at all, and, uh and so I get up out of my seat. I knew something was really wrong. I get up out of my seat and run over and start trying to figure out what it happened plugging my laptop physically in the back of the servers to see if the, um, the servers are actual responding. They were Well, it turns out that one of our network switches in this cabinet. There was adjacent to our servers that everything plugged into is kind of our central hub. Had Ah, it overheated and it melted down. And so I had to go and re wire some of these network cables to bypass the switch kind on the fly so that the data could get past, uh efficiently, and it actually become certainly getting past again, right toe bypass this field notes.

Speaker 2: So let me ask you another question. Have there been missions that you went on in the past? Or I should say that you were, say, rear with the gear and having to assist, almost like a You know, you're on the ground, there's an issue, and then you have to kind of assisted team remotely. If have you ever been in that position as well?

Speaker 1: Yeah. So, um, so initially when I started, it was me in one of their software engineer and I was the only one flight qualified to todo flying the plane. But as we went further along, we had another engineer that got Flake. We hired a new guy and he got flight qualified so he could e some of the kind of on call burden for me and yeah, he, um he would go fly around and I'd be sitting there. We'd IRC to chat to each other, and so, uh, we'd be talking on IRC back and forth, and so he'd be up there trying to debug some code. Potentially is something that I wrote or ah, or something that he had never seen before. And he'd need help. And so I tried to like S h into a box, but, ah, we're over satcom thio to get network and activity, and then so the connections were always very spotty. Um, when the aircraft would turn hard enough, the antennas on the top of the plane couldn't gimbal toe pointed the satellites like they needed to. That's every time the aircraft would turn, you would lose network connectivity. And so you'd be sitting there s a station to something trying to run a command and boom your session with time out that it wouldn't establish until the satellite would go on, re gimble and lock back on. And that could take potentially several minutes.

Speaker 2: So were a lot of the things that you have protocols for. Were they kind of like almost stateless, where things were moving. You're just hoping that they get to the end of what are you doing? Things over UDP type of photo calls like it was a lot

Speaker 1: of GDP. Yeah, there's a lot of, like streaming data, a lot of real time information. So these would be like way have things like cameras and other R F sensors. That would be just streaming us data as fast as possible Are, um, we had actually to two networks on the plane. Almost. I can make an analogy to what I've seen and kind of manage service is space as like a nice, cozy or like a fiber channel network is similar to how you you distribute the management network in a data center to the data network or the fight between a network on Under Sands. We had a similar network that was our isolated, high throughput data network for our high throughput sensors that would stream all of the data over. Then they made a separate network. I'm in separate network year that would then be for our message passing and our control system and stuff like that to one just have enough bandwidth to pass that data through and then to isolate kind of those failure so the data could still come over and not congest the network for all of our control pieces.

Speaker 2: So here's another question How large was the average mission that went in the air with you most of time, and then your support crew on the ground, like how big a team permission would you talk about?

Speaker 1: Oh, that's a good question. So, uh, on the aircraft, we could hold 16 people total. And let's see if we were doing a full flight profile mission. There would be three pilots to flight engineers, a navigator and then a mission commander. And then the rest of us would be they called a scientists or project specialists at the time. And so most of us were kind of nerds and engineers, and then we had kind of a minimal viable crew to go and fly and operate the aircraft on the Navy side and then on the ground are support personnel were pretty light. Um, we ran a pretty light project, and so there might be one or two individuals from the different sensor teams that we're seeing. They're communicating with us. So I'd say no more than 68 people on the ground kind of helping us out. We had we had more than that, but usually it was pretty light during missions and, um, and activity. So

Speaker 2: catch it. So what are some things that you think you really learned mostly about having to support these types of incidents in real time on an airplane? Like, what was the thing that you you really took from that? And then we're gonna talk about, like what you want advise others to do. But I'm more curious about just like, what were the big things that you as an individual as a technologist. And I'm not even talking about, like, individual technologies, because it's obvious you had to support some of that stuff. But, like, as a person, what did you really gain? You think, um, from being part of that,

Speaker 1: um wow, I, uh I gained a lot of Ah, I guess tenacity and an inner drive. You had to be super motivated and ah, an agile while you were up there, right? If something breaks, um, usually stuff came kind of in waves, and so one thing would break, and then 10 other things would break and you had to adapt really quickly and kind of persevered through that. And so you need to be really personally strong to take things on the Chan, right? So all of your gear is breaking right. It's all of the stuff that we were working on. It was broken all the time and we needed, you know, except that and be empathetic to the end user that was having the problem, saying No sorry. Well, we'll work on getting that fixed for you and then also Bill to keep like that mental checklist and then prioritized quickly and knock those pieces off. As you know,

Speaker 2: it's not that far off, I guess. Then, from what we talk about when we're talking about manage Service's or anything like that, you know, in modern application at support, you know, people I need to be dedicated, I suppose, is that is the best way I can put it. And dedication. Um, it is often visible in on call incidents because you can see people who really do appreciate and care about ensuring the things that they're responsible for our maintain and stay online. And I'd imagine that being in an airplane makes it a little bit even more interesting to do. Because, let's face it, you're the ability to quickly do things like let me just google that answer or call Bob real quick. You know what I mean? Or let me call Jane real quick, like they're not the simplest things that you can do. You have to, I guess, Be a bit more, Um, on the fly.

Speaker 1: Yeah. And, um, that brings up pretty good points, too. So I I couldn't rely on things like Google. Um, so I didn't have access to, like, simple things, like documentation. Where if I did, I would have to be smart about it and download it ahead of time in part, on my laptop, Um, or being able to call Bob. If I was gonna call Bob, I had to use this sat phone that sounded like you're talking through a tin can in a windstorm on a 1972 land life, right? It was terrible. And you're having to fight engine noise and electronic feedback and all this stuff, so you had to do a lot of understanding and troubleshooting yourself. And so I got really, really good at understanding the way that the system works and the way the software and the hardware was working together. And you had a constant ask yourself, you know, how is this working under the hood? What is the way the system is actually interacting and then be able to troubleshoot that yourself? And that's something that I see missing a lot. And ah, and other people that we hired on after I worked there and also just other engineers that I've worked with. Um, that's something that I think it's undervalued as a skill is being able to debug, troubleshoot and understand systems quickly. And it helps you become a better engineer and a better support person when you kind of developing hone those skills because it applies to more than just software, right? Oh, are being on call rated actually helps you become a better troubleshooter and problem solver in your life

Speaker 2: makes a ton of sense to me. So let's let's go back to the future. Now let's talk about now. So, um, we talked a little bit for a second, but why don't you tell me about what you're doing it on court lately?

Speaker 1: Yes. Oh, Encore is a man of service provider. We do a bunch of different things, but our group is really focused on helping large enterprises get better at their i t. So we'll come in and do an evaluation. Talk to them about what their their weak points are and help them develop a plan, implement whatever it might be right, Whatever are are gaps that we found are so it usually involves a lot of automation. It involves a lot of social transformation and guesses the Dev ops transformation kind of cliche, but it's really deeper than that are our goal from a business perspective is to help other businesses do their business better, and that that's really the root of it, right? Like Dev Ops is just kind of ah, a means to an end in the end is helping them achieve success, right? Whether that's, you know, improving their speed of delivery or improving their reliability, whatever that is so that they can deliver their service is better to their customers. And so, uh, so we hit you, May? Yeah. So we, uh um we do a lot of things around like that automation, Um, we we were doing our own Dev ops transformation. So I recently got promoted to be the director of engineering on, and I'm now the manager of my old team, along with a new operations team. And so we're going through our own transformation toe, bring those operations people into the Dev Ops fold and teach them new skills. And so my my role is a lot less technical nowadays, but I think it's, ah, just as important, if not more important, because I know I have a whole bunch of people relying on me, not just a small few.

Speaker 2: Well, then you have given me now the ability to ask you to the questions that I like to ask a Zoe hip toward the end of the podcast. And one of these questions are specifically for managers. If from you could tell another manager, that's, um, managing a team that's on call. Ah, piece of advice. What would you give that manager? I would

Speaker 1: I would sell them. Thio really understand how their system is working and how to you. Ah, um to delegate appropriately. So I feel I feel bad sometimes, and I've experienced this ah, little bit in Ah, my management career where certain individuals will, you know, see you get a call in the middle of the night and we run a pretty diverse shop. So we managed things from network to compute into the application layer a little bit. And, ah, you know, we'll get a call in the middle of the night and a storage person will be on call. And they'll just immediately try to delegate over the network team if because the customer says his network issue that I'm to debug themselves. And so I think that, um, the managers could do a better job of understanding what the rial problems are and how to do some simple debugging and help delegate and get the right people on the phone if they need, Thio

Speaker 2: makes sense to me. And so let's also say to the person who's on call right now who, you know, maybe new edit. Or maybe they've been doing it for a while. What's a piece of advice you give to the person who score currently, Uncle,

Speaker 1: um, I think a big piece of it is Make sure you're you're happy with what you're doing, and you're at an organization appreciates your heart effort because being on call is not easy. Um, I I struggled with it. I think it's, um, a really undervalued skill and and responsibility. I think people sometimes, you know, it could be a burden. Also, right here, you're having to stay home nights and weekends and make sure you're available having to give up time with your family. If you're an organization that doesn't value that scale or doesn't listen to those issues or problems or try to work with you, you sign for you to find a new job, right? Don't Don't be scared to change, Um, just being somewhere that your skills and your, um they're pieces of value are taken to heart is really important.

Speaker 2: Well, let's let everybody know how they get in touch with you. If they'd like to keep talking, you're on Twitter, Correct?

Speaker 1: Yeah, I think the best place toe find me is on Twitter at Nick Malucci. Um, she'll be in the show notes.

Speaker 2: Yep, it absolutely will. And if they want to check out, you also have a tech blogger for Encore. I'm gonna keep that in the show notes as well. It's encore technologies dot get hub dot Io. Um, thanks so much for, you know, just another take on this kind of work. I really do appreciate it. And I hope you enjoyed. You're talking with me about

Speaker 1: awesome. Yeah. Today there's been awesome. Thanks a lot for taking the time today.

Speaker 2: No problem. So everybody stick around, we're gonna wrap up the podcast on and will, of course, will be part of me begging you to be on just like I did with Nick. So, um, stay tuned. We'll be right back. I wasn't kidding you when I said weird on friend, was I? I mean, it sounds pretty weird to me, but it was awesome. And if you are doing some weird on Primal, so I'd love to talk to you as well Get in touch with me. I mentioned it before, but it's at Jay Destro at on call Nightmare. And also, uh, arm call. Nightmare's at gmail dot com. Get in touch with me one of those ways. I'd love to talk to you about being on call with some weird on Prem. Anyhow, that's it for this week. Like I said, if you've got some time, please let me know if you like to be on the podcast because I am short for next week on interview. But, you know, hey, make sure you've listened all the previous episodes. Andi don't miss out because some really great stuff in some of those conversations. So thank you very much. Everyone, for listening is always it's super appreciated. I get some really great feedback from people when I'm on the road or just buy it online. So Becks again will catch next time on the on call Nightmares podcast, where every week I bring you conversations with technologists who spent time on call.

