Speaker 1: you're listening to the on call nightmares podcasts, and every week I go out of my way to get you conversations. The technologists that spent time on call this week. I'm in Toronto, Canada. I'm outdoors right now and enjoying the great White North. A day before the N B A playoffs came here. Thio visit devastates Ron Oh God, A bunch of Greek conversations have already had did a talk, and this week I've been able to interview contestants, hunks of logs, Io contestants is someone that I've been able to meet on the Devotees touring circuit. If you will, really, really a great person. And I think you're going to enjoy this conversation. If you would like to be on the podcast herself, it's really easy. Just get in touch with me. Do so. You can send me an email to on Call Nightmare's at gmail dot com, or you can easily just d m e. On Twitter. You can use on Call Nightmare or J destro. Either one's fine. So let's go ahead and get into this conversation with the contestants, which I think you are going to really dig. Really smart person who's do it's really cool stuff right now, so let's get into it. All right? You're listening to the on call nightmares podcast. In every week I go out of my way and that might mean traveling on planes. That might mean going conferences. But no matter what, I go out of my way to do my best to bring you conversations with technologists who have spent time on call. And today I have found another one of my road warriors in the world of developer advocacy and relations is someone who's worked in the I T community for over 10 years. And Infrastructure Dev ops Cloud Engineer this person was Court contributed stalking Wing Shield project. And no, we're not talking about any Batman or anything like that. Completely different. There's no Tony Stark Cloud foundry and currently now logs io developer adv like a really great person. Contestants, Hunks. How are you

Speaker 2: today? I'm doing great. How are you?

Speaker 1: Good. So we're both here. I've been really lucky to be traveling a lot lately, and in my travels I try to do these interviews and so you're someone that I get to see a lot on the road and I'm always happy to, um, you know, the upstate New York, West, New York, Toronto. We don't hear a lot about it in the rest of I t. So I feel like you kind of hold it down for hold us. You're kind of that representative of Western New York.

Speaker 2: I try to be. I love Western New York. Beautiful place.

Speaker 1: Yes. Eso you've been in technology for a while now.

Speaker 2: Artificially. It's just secret. Little bit.

Speaker 1: Yeah, it feels that way. You know, I've done 20 years myself, your urine, not 10 years. And what? We'll talk more about the career where you win, how you got there. But more than anything in that 10 years, what have you really taken the most, like? Give me the big, big, high level thing. What have you taken the most out of being intact for 10 years?

Speaker 2: It's gonna maybe sound a little off beat, but maybe not so much lately. Processes are important because when you encounter a problem, no one knows what to do. Then you have another problem. And the analogy that I picked up over time for for this is like, let's say you're not particularly familiar with cars in General, you go and buy a car like, Oh, this is how you use the spare tire that we've talked in your trunk or wherever. This is how you use the kit that's in there to take care of it. And then you do nothing until you get a flat tire. Maybe it's in a month. Maybe it's in 10 years, depending on how long you in your car. But by the time you have to change that tire Oh, no. I'm so glad I have triple A.

Speaker 1: Yeah, or like the car insurance is, we think about it in the States. It's like, you know, you always like, Oh, my cost so much. But you know, when you get in that car accident, you are sure glad to have it. Absolutely. See, I can see how process and procedure can really make you want to grow and be an I t person and really enjoy that world. So I see. So you've been in 10 years? Uh, let's let's get started with what I like to do in the podcast is tell me how you got really into being a known call resource early in your career.

Speaker 2: It was a bit circuitous, actually, because I was doing I t support for the college campus when I was in college doing tech support for a few years after that. And then I got a job as a d b a Andi. Thankfully, when I was a junior d b, I wasn't on call, but shortly thereafter, right. It's when you get your promotion and you say, Hey, and they're like, It's an on call rotation and go Oh, no, I

Speaker 1: remember when that change happened for me. You always get into it with the best of intentions. And then when you realize, oh, what did I do? It becomes far more evident that you've taken a very, very big bite of a new type of sandwich. Yes, sometimes that same, which kind of taste like shit. There's no other way to put it. So you get your start in school. Um, like a lot of people in our industry, I feel like whether your major was in technology or not. A lot of people feel like starting water in school. What was your major

Speaker 2: physics and mathematics told Major.

Speaker 1: It's amazing. I meet more and more people that you know I'm a college dropout, so I mean, I own it. But the Maury meet more people who are in our industry, especially people who have diverged from the direct engineering roles. They tend to be people who have not spent their entire world in technology. They started somewhere, and technology give him a path to move forward more. Would you say it's that

Speaker 2: I would agree? I would agree. And especially when I was in school when I was in school, I had this idea and for a long time prior to that when I was a kid is like, I'm gonna be an astrophysicist. This amazing landscape was different. I graduated from undergrad right around that massive possession that the United States and nine and I was like, Oh, no. But then I thought, Oh, if I stay in technology, since the world is becoming more more technology based than rather instead of competing with, you know, physics and sponsorships. And Brad and I could just work in technology and I can do technology that's adjacent to speak, you know, Stan and research we're not, but it felt more secure.

Speaker 1: Do you

Speaker 2: perceive it that way?

Speaker 1: I can see that because in the end I mean we still have to pay bills. So it's that's extremely a port night. So I understand. So you kind of go into this role, You get the skilled up as taking on your now more senior within the role. And now you're in an on call rotation on DSO. How long were you doing that? Until you did, you eventually move into another rotation in another company. Were you there?

Speaker 2: So it's interesting because my on call rotation I was lucky enough that were fairly significant. Chunk of my tenure was actually working on a consultancy. It was starting weight on. And there's come The concept of on call when you're in a consultancy is very differently because hourly so right sometimes in the contract, they're like, Oh, no, we do need to build hourly for consultants being Colin. Sometimes they don't. But the verbiage around that is very different than when you're in house, which I was grateful for when I was transitioning between less and more senior rules because it was on Call Light and my personal experience for that eternally grateful for that, I got into a pretty heavy duty on call rotation of two people met a startup because startup. So that's when I got really intense for a while there.

Speaker 1: Cool. So is this still the first job out of out of college or you on more than the second job by

Speaker 2: now? So I had that would have been the third job out of

Speaker 1: school. So now you're their job out of college, he spent time learning Go lang. And then eventually you make your way over the logs. I o. And that logs I Oh, you're now working in the death box community engagement and helping people really get Maura out of their data that they're collecting when they oh, produce systems. So that's the big idea of behind what logs were doing. But I feel like there's a little bit more to you than just your Dev Advocate. I know that you really help people who are underrepresented in our industry, get more visibility, and I know that you've definitely going out of your way also for accessibility. Yes, so we'll get into that a little bit more. But one question I have is Do you think that people who are say in roles that demand on call. Do you find that accessibility is hitting them as well through tools like pager duty, like his pager duty, Really, and big drops? Are they serving say enough for accessibility for their end users? Because we know they're people who do this work. They may be blind. They may be deaf. They may have other things that do you think that tech specifically like? Sorry, we're doing enough to make sure that it's accessible enough people.

Speaker 2: Ooh, that's rough. It's interesting, you mention, because a lot of the focus for some of the accessibility is a lot of user accessibility, right? Like is my product that I'm building for an end user accessible to that end user? From when your end users another engineer, like with Bob their pager duty or anyone who is producing software for engineers, you really get into an interesting space where the user might be a person who needs disability Service's who is still is still engineer, that they're not a user in the quick legal sense, right? I see that there's a lot of effort that's done for including that. I would say that it's hard to necessarily do an easy metric as to whether or not like when is enough enough or how can we reach everyone or the majority of everyone? And I think the best way to figure that out or to work on that more is to really, and I know that this comes up a lot ethics and technology if we had a review process or something like that. So when we're talking about accessibility and tools, what if the tool is more visual like, you know, dogs are we focus on and I'll cast Gabbana, which is visualization data. But if you're blind, that doesn't help you exactly give a screen reader for logs, depending on how well your filtering. That might also not help you, because law to me, chatting and verbose. And you'll just have a screen meter reading like key value pairs exactly, and you'll get lost very quickly, So I think that there are things that can be done in the space that can make it more streamlined and more accessible. I don't claim to have all the solutions now that stuff about something that you're

Speaker 1: helping him out, you're bringing the conversations to toe light now. I appreciate that. So back to the podcast topic a little bit, so we're gonna bring it back. And I I really do. Thank you for answering that because one of the things I've been trying to do in this podcast, we'll get people's thoughts around being on call on their stories. It is also just like how people look att, modern high tea operations in general. And like, I like hearing from people like yourself who are a little bit more conscientious of others and are thinking about. So the only reason I brought thank you very much, absolutely cool. So we're going to get into a part of the podcast in which I go over the rules. And, yes, like a lot of things in life, there are rules and the rules here. Pretty simple one. We are going to make sure that you don't incriminate yourself because, you know, that's not what we want to do. We want to get trouble. We don't want to incriminate anyone else because we weren't blameless, Lee, and this podcast is constantly in retrospect. If so, the third rule is let's learn from what you've done, so I'm going to give you the ability to tell me about a really nasty on hall incident and just how you feel. Like you recovered from it. So please tell me. Tell me a story.

Speaker 2: Sure. So upfront. I actually nickname when I have to tell stories of this nature actually developed an umbrella company. It's a shell company that doesn't really exist. I call it Wild Wild West Systems three ws because you know, your deployment My favorite on call story because it hits so many different points at once is actually when I was more junior, so I was not the one woken up. And thank goodness for that, because the resulting was a weeklong production out. So it was a bad time. It was a bad time. It was early in my career, and it actually happened during the blizzard because it's buffalo and the blizzard had nothing to do with it. But I just insured that in office that was actually not geared up remote work. Not only do we have a massive outage, we were doing it remotely as well.

Speaker 1: So yeah, you're used to It's not at home yet. Let's get it home. Things like that get everything. I heard a lot about this when I worked at Buzzfeed during her Hurricane Sandy. Okay, there was a lot of conversation about how sometimes the biggest problem when you're dealing with a major incident like that, and you can't get to where everybody normally does the work. Yep. Just figuring out how to get to the work, right? Please.

Speaker 2: Yeah. So the short version of what ended up happening with that it actually took a while to figure out. So it hit a few different things, like I said, And the first visible problem was the outage of the data. So when people are trying to run queries and data, you know, things weren't necessarily visible, and then it became a kind of escalation. Heroic. Oh, wait. This also isn't there. This also isn't there, That's what What's going on with going on? And then, you know, you start sniffing where traffic and at some point I junior, you know, wake up And I'm like, Oh, no, there's so many messages company on. I'm skimming through to catch up and pinging the seniors and saying, OK, what's been going on all morning? Um, and and as we're traffic checking traffic and everything, we noticed that nothing's actually flowing. So okay, now we've started to identify some sort of like central source, right o the networks not actually routing traffic the way that it should. That's interesting. So you try and fix that and then immediately topples on itself. Okay? Digging into the errors of that revealed what looked like a d toss, but it was internal. And that was I think

Speaker 1: this is a distributed denial of service attack. You would assume that would be from an external like it's hitting an externally available end. But it wasn't

Speaker 2: right. So it was traffic was somehow starting to span out internally. At which point the networks which said to the affected zone Oh, no, shut it down. But at the time again early my career long time ago before things like that Story and Dev ops and things were common and h I was a recommendation. It was we had one zone, so that one's own it's

Speaker 1: his own, just collapsed. Sure

Speaker 2: s o. Then we stopped focusing on fixing and bringing up the donkey was going down anyway and trying to figure out what was spamming the traffic. So we're going through and eventually we're gonna skip right through to the end. Spoiler alert. There was hyper visor we had you over July system. And in one of the PM's, there was a patch update for Java that for some reason, most of the annals of time was causing that bm to spam out traffic and errors. And because of the volume in frequency, it was causing the switch to shut down. The traffic ended it. And we saw the symptoms that I mentioned before. So this took actually a while to figure out as we're digging around, can't

Speaker 1: handle the number of packets being transmitted.

Speaker 2: So then we fix it really great party time, and then everything shuts down again. Oh, no. Why? So we stick everything and read only mode because we don't actually know why that's just happened. And this is another point that could sit on in this particular nightmare. The collective living memory of the people currently working in that department had neglected the hot hot replication that was happening with an offsite server. So we were fixing it, and it was being quote unquote fixed by the other server and undoing our fix, and it led to a few times where we were fixing it was going down, fixing it going down. Really? Why is this still going down?

Speaker 1: You're having replication be fixed when it's already fixed. Yeah, I got you. So then the replication keeps trying to takeover is like a master over and over again. Yes, that's that's nuts.

Speaker 2: It was It was

Speaker 1: so So where does the resolution here come? They finally make a determination to detach this, like, live hot, hot, spare.

Speaker 2: So you detach and put into a more passive mode. You fix one, you fix the other, you bring them both both up and ringing. Stan, She ate the old process, and then everything was fine once more.

Speaker 1: And now things are back online. Yes. Cool. So, um, you bring everything online, you take this additional. Like, was it a database server?

Speaker 2: It was a whole. It was actually reputation of the whole setup. So all the lands and everything, everything was replicated on this external sight.

Speaker 1: Also is trying to do like the whole thing. Like what? You would call the emotion in the M where I suppose of moving like instances, if you will or PM's from one hyper visor to another. Wow, that sucks. No wonder you. So I'm guessing that I kept moving

Speaker 2: brain, everything's moving and it made it really hard to navigate. And I remember at the time thinking this is the career choice. I made him so good. I'm a junior right now. I won't be for much longer. Oh, no.

Speaker 1: So, you know, I would imagine. Then you spent a whole much time after the fact Kind of doing some sort of post mortem on it. What? What? What came from that post mortem?

Speaker 2: So the different areas that it hit right? So now we had this being We needed to document everything about her. We need to document breakages better. We needed to document our own setups better because it really you know, when this goes to what I said before, processes matter, you know, because they don't matter until they dio And for basically a it was a small company, but still have a department company go. Oh, no way. Have a whole other piece of equipment in only a few days in about, right? So we really needed to make sure that we were like, OK, this is our set up. This is how everything's configured. Yes, it's not active, passive. It's active, active, how to make it active. Passive in the event of a catastrophe. The networks which is behavior splitting into two zones other such things to make it more protected from itself in the event that something started to go wrong. So it didn't take down everything because realistically, what happened was literally won the M out of many took down the whole thing.

Speaker 1: And if we know anything about cascading failures with Azan industry, we talked about how one individual service should never take down an entire set of service is. So I feel like early on before you really understand that what you were saying before the s sorry methodology, these were great learning incidents. I mean, it sucks when it happens, but you realize how much you learn from these really wild things. And I feel like personally, I gained a lot from

Speaker 2: failure. Oh, yeah,

Speaker 1: and I feel like a lot of the people that I talked to Now it is. We keep promoting this idea, you know, failures, good break things on purpose. And it's interesting to hear how those concepts kind of came to be, and I really feel that it came from people just accidentally break. Yeah, and you know, Nathan Harvey and I talked about this last week, but you really kind of feel like you become part of a company when you take down their production service's. And it's odd because I've done that in a couple places and, like it's a guess about dealing with the after. And I guess that's what we're talking about, the aftermath and what was learned. So in my cases of like taking down tons of systems or a service or something and things don't work, you know, you said you talked with people on you. Find out why exactly this problem happened. Were you all able to kind of come to that kind of resolution,

Speaker 2: flew over and and again it had to do it. And you know, more things that went, and I'm sure 1,000,000 of us, not just our company, not three ws as it were. But you know, 1,000,000 of us is what went into things like Google's s sorry, right, because when we discovered it, it's not like someone just pushed that patch into production and thought cool beans. We did have separate Devon staging, and that's when we noticed that not everything was in sync. Version wise. So the Pash update did a why the same way it didn't have the same behavior in the different environment, which again, I mean yes, de facto. It's obvious that you're environments need to be in sync for you to be able to legitimately test behavior. It's not like they fell out of sync on purpose. But then you develop process is to make sure that they don't fall out of synch again. Yes, Like I said, this particular outage just touched on multiple things at once, right?

Speaker 1: Yeah. And the thing that you really learn about after the fact in these incidents and it's funny because I talked about it in my talk today was that when these types of things happen, you know, they continue by nobody having conversations afterwards. Yeah, yeah, and we tend thio, like, acquire more technical debt because, you know, the after a major incident, people don't sit down and involve other teams. They don't necessarily recognize that. Ah, bigger look at what happened and how to prevent it. The future is needed to be done. And so I really believe in the open postmortem. Feel like the right amount of people is who should be there. And you need to ask yourself, that is a company who needs to know what happened and how can we work not just the engineering team, other portions, the company, how we work, to ensure that this doesn't happen again and that the people that need to be informed aren't reformed, whether it's our customers. Were our engineers internal? Absolutely. So let's let's start bringing it home. Which is what I do with this pot. Start rolling on. Don't want to talk to you before way kind of rap. I wanna ask you a question. I ask everybody, And if you could give a piece of advice to anyone that's currently on, what do you think it would be?

Speaker 2: Make sure you have adequate support on and make sure that you know who to escalate through or to or with, depending on. You know, your personal stats and the tool chain of humans. Because if you don't know where to take a problem, if it exceeds your time tiredness, anything, then you're gonna get stuck, hamster willing, and you're not going to move that wheel out of the mud.

Speaker 1: That's that's really good advice. So let's let's talk a little bit about you. And now on what you're doing. Eso logs io kind of on elk stack. Powered way to review inbound data that's that's acquired from logging and other portions. Let me ask you, you you're in a really crowded kind of place right now in the world. There's a lot of people that want to help represent your logging data. Somehow, another visualization. What's the thing that you feel like? Logs is stand out and you're like, This is why I'm glad I'm doing this. So

Speaker 2: it's interesting you ask that because actually a customer before I wasn't flee, Well, that's one of the things that I think is a customer. Yeah, actually really liked. And I cannot understate this enough that it was really nice to have a hosted elk on don't have to, you know, handle that myself. In addition to other tests, I was staying at the time. Sure, I didn't enjoy that. You can actually separate things out into separate accounts very quickly and easily so that For example, if I want my Dove data toe not last as long as my production data, I can do that. I also

Speaker 1: teals based on your case, if you will,

Speaker 2: basically, you can separate that out. However logically makes sense for whatever your application is but right. And I actually also really liked the fact that we have since I've been on board it. Now we're doing all these things with security. So we actually built a security product on top of the out stack, and we actually have some built in so that people don't have to build that all from scratch from our research in our security team. Awesome. Yeah.

Speaker 1: And what else are you blink personally working on? I know you always have a a bunch of different little projects, and you're always kind of mentoring and fostering people into technology. Right? So what do you up to lately?

Speaker 2: So we actually in Stan, She ate it inclusive talk about flow within the past calendar year. And that was basically a shift in a rebrand from an organization that we have been working with prior. And basically, we're continuing the same mission, but expanding our scope and it's to what you said about the mentoring and just fostering getting these people into technology. Because, I think, especially when when you see a vision of success that is maybe passively portrayed as a singular thing. Oh, well, I didn't major in computer science more. I'm too old or I'm too young or whatever. It's self deprecating and stopping you. If you have a conversation, can realize there are lots of people who didn't major in CS or who are older or younger, or just have some sort of what may be a non traditional path. But on conversation, maybe more traditional than you initially realized.

Speaker 1: And I think when people hear that you're not the only one, there's someone else who's doing this, and it's come from the same path you did. It gives them far more interest, just interest. Just knowing that you know you're not the first person in you probably won't be the last person to go from a non traditional background into technology, and so I think you're helping people kind of get through that, and I appreciate it because I think that we need people that have different types of viewpoints or the way the world kind of looks to them through how they were educated. What whether it's, you know, I was a sociology major, and now I have a better way to interpret data because I think about biases, things like that. I think it makes it important, or it's changing how our side of the business really works.

Speaker 2: And I actually do a brief intro to that from the talks that I give the serendipity talk because ends about diversity and about how you don't necessarily hire on these criteria. But if you're more diverse, you get them exactly free.

Speaker 1: It's like just being able to recognize that in a business. A singular group that's, you know, homogeneous is going to probably give you one vision most the time. And I feel that technology requires multiple views on how something could be done and how it will help different people. And like we talked about in the beginning, you know, um and I it's a silly story. I'll tell it really quickly. I was in Amsterdam and I watched a commercial for a an egg that you can boil without shell. You could make a hard boiled egg without the show. You just crack an egg and you put it into this thing and then you boil it. And at first I thought, Wow, this is really silly. And then I started thinking about it and I said, Wow, what if you actually don't have hands, fingers or you have arthritis or some other debilitating way? And you've always wanted a hard boiled A. Someone thought about that, and so they're things related to technology. I think that if we start thinking about, like, who doesn't have access and how do we get it to them? I think is mine. My little hard boiled egg. And so that's That's the way. Thinking about stuff, Levi. Anyway, Quinn, thank you so much for time here today. Thank you so much for having no problem. How can everybody follow you and find you and all those things so they could keep up with what you're up to?

Speaker 2: I'm mostly on Twitter, and my Twitter handle is just my name quintessence. Aunt's a annex. And then I'm also unnoticed, which is where I keep a copy of my presentations and any videos that conferences post in my user name. There's just

Speaker 1: cool I'll make sure that everybody gets those links in the show notes. So we're gonna wrap this up. Thank you very much, Quinn. And we are like I said, here in De Bob stays Toronto This'll first day is almost over, and we're gonna move into the second day. Quinn's gonna be talking. It's going great. If you've never been to a Dev Ops Days, you will probably see one of us if you go so you know, come on down, wear a great group and we wanna have you part of this. So thanks, Quinn. We'll be right back with the on call nightmares. Well, that's the podcast for this week. Thanks a lot for listening. I'm really enjoying myself out here in Toronto. It's beautiful, and I want to recommend you take a look at this Dave offstage. Toronto. In the future, they're doing such a great job. There's so many people here. It's really, really impressive. So thanks a lot to the organizer's here for having me and for everyone else. If you'd like to be on a future episode, I think you know how, But I'll tell you once more, Send an email to on call nightmares at gmail dot com, or send me a tweet, a. D m. Whatever you want at on Call Nightmare or at J Destro, we'll catch you next time with the next episode off on call nightmares, where every week I go out of my way to do my best to make sure that I bring you conversations with technologists who spent time on call. See you next time.

